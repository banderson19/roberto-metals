{"version":3,"sources":["utils/images/logo.png","components/Header/index.js","components/Footer/index.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","utils/queries.js","components/TicketModal/index.js","components/TicketList/index.js","pages/Home.js","pages/Profile.js","components/AddMaterialModal/index.js","pages/SingleTicket.js","pages/NoMatch.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","src","logo","alt","Footer","LOGIN_USER","gql","ADD_USER","ADD_TICKET","DELETE_TICKET","ADD_MATERIAL","DELETE_MATERIAL","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","useState","email","password","formState","setFormState","useMutation","login","error","handleChange","event","target","name","value","handleFormSubmit","a","preventDefault","variables","data","Auth","console","log","onSubmit","placeholder","type","id","onChange","Signup","username","addUser","QUERY_TICKETS","QUERY_TICKET","QUERY_CLIENT","TicketModal","clientName","setText","update","cache","addTicket","tickets","readQuery","query","writeQuery","e","customStyles","content","top","left","right","bottom","marginRight","widht","transform","Modal","setAppElement","TicketList","title","React","modalIsOpen","setIsOpen","length","closeModal","onClick","isOpen","onRequestClose","style","contentLabel","map","ticket","pickupDate","_id","fontWeight","materials","material","materialName","quantity","Home","useQuery","loading","Profile","useParams","client","AddMaterialModal","setMaterialName","setQuantity","ticketId","addMaterial","SingleTicket","materialId","setMaterialId","deleteTicket","deleteMaterial","handleDeleteMaterial","NoMatch","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.791b033e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.43b64337.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../utils/images/logo.png';\n\nconst Header = () => {\n    return (\n        <header className=\"bg-secondary flex-row\">\n            \n            <div className=\"rapid-green-color container flex-row justify-space-between jusitfy-center float-left\">\n                <Link to=\"/\">\n                    <h1> Roberto Metals </h1>\n                </Link>\n                <img src={logo} alt=\"BigCo Inc. logo\" className=\"logo\"/>\n\n                <nav className=\"float-right\">\n                    <Link to=\"/login\">Login</Link>\n                    <Link to=\"/signup\">Signup</Link>\n                </nav>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer className=\"w-100 mt-auto  p-4\">\n            <div className=\"container\"> &copy; 2021 by Bradford Anderson </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_TICKET = gql`\n    mutation addTicket($clientName: String!) {\n        addTicket(clientName: $clientName) {\n            _id\n            clientName\n            pickupDate\n            materials {\n                _id\n                materialName\n                quantity\n            }\n        }\n    }\n`;\n\nexport const DELETE_TICKET = gql`\n    mutation deleteTicket($ticketId: ID!) {\n      deleteTicket(ticketId: $ticketId) {\n        _id\n        clientName\n        pickupDate\n        materials {\n          _id\n          materialName\n          quantity\n        }\n      }\n    }\n`;\n\nexport const ADD_MATERIAL = gql `\nmutation addMaterial($ticketId: ID!, $materialName: String!, $quantity: Int!) {\n  addMaterial(ticketId: $ticketId, materialName: $materialName, quantity: $quantity) {\n    _id\n    materials {\n      _id\n      materialName\n      quantity\n    }\n  }\n}\n`;\n\nexport const DELETE_MATERIAL = gql `\n  mutation deleteMaterial($ticketId: ID!, $materialId: ID!) {\n    deleteMaterial(ticketId: $ticketId, materialId: $materialId) {\n      _id \n      materials {\n        _id\n        materialName\n        quantity\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n    // retrieve data saved in token\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if the user is still logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    // use type coersion to check if token is NOT undefined and the token is NOT expired\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  // check if the token has expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else {\n        return false;\n      }\n    } catch (err) {\n      return false;\n    }\n  }\n\n  // retrieve token from localStorage\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  // set token to localStorage and reload page to homepage\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  // clear token from localStorage and force logout with reload\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\n\n\nexport default new AuthService();","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n        const { data } = await login({\n            variables: { ...formState }\n        });\n        \n        \n      Auth.login(data.login.token);\n      console.log('data', data);\n    } catch (e) {\n        console.log('errrror')\n      console.error(e);\n    }\n    // clear form values\n    setFormState({\n      email: 'test2@test.com',\n      password: 'test12345',\n    });\n  };\n\n  return (\n    <main className='flex-row justify-center mb-4'>\n      <div className='col-12 col-md-6'>\n        <div className='card'>\n          <h4 className='card-header'>Login</h4>\n          <div className='card-body'>\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className='form-input'\n                placeholder='Your email'\n                name='email'\n                type='email'\n                id='email'\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className='form-input'\n                placeholder='******'\n                name='password'\n                type='password'\n                id='password'\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className='btn d-block w-100' type='submit'>\n                Submit\n              </button>\n            </form>\n            {error && <div>Login failed</div>}\n\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({ username: '', email: '', password: '' });\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // use try/catch instead of promises to handle errors\n    try {\n      // execute addUser mutation and pass in variable data from form\n      const { data } = await addUser({\n        variables: { ...formState }\n      });\n      Auth.login(data.addUser.token);\n      console.log(data);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className='flex-row justify-center mb-4'>\n      <div className='col-12 col-md-6'>\n        <div className='card'>\n          <h4 className='card-header'>Sign Up</h4>\n          <div className='card-body'>\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className='form-input'\n                placeholder='Your username'\n                name='username'\n                type='username'\n                id='username'\n                value={formState.username}\n                onChange={handleChange}\n              />\n              <input\n                className='form-input'\n                placeholder='Your email'\n                name='email'\n                type='email'\n                id='email'\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className='form-input'\n                placeholder='******'\n                name='password'\n                type='password'\n                id='password'\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className='btn d-block w-100' type='submit'>\n                Submit\n              </button>\n            </form>\n            {error && <div>Sign up failed</div>}\n\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_TICKETS = gql `\n    query tickets($clientName: String) {\n        tickets(clientName: $clientName) {\n            _id\n            clientName\n            pickupDate\n            materials {\n                _id\n                materialName\n                quantity\n            }\n        }\n    }\n`;\n\nexport const QUERY_TICKET = gql`\n  query ticket($id: ID!) {\n    ticket(_id: $id) {\n      _id\n      clientName\n      pickupDate\n      materials {\n        _id\n        materialName\n        quantity\n      }\n    }\n  }\n`;\n\nexport const QUERY_MATERIAL = gql `\n  query materials($id: ID!) {\n    materials( _id: $id) {\n      _id\n      materialName\n      quantity\n    }\n  }\n`\n\nexport const QUERY_CLIENT = gql`\n  query client($clientName: String!) {\n    client(clientName: $clientName) {\n      _id\n      clientName\n    }\n  }\n`;","import React, {useState} from 'react';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_TICKET } from '../../utils/mutations';\nimport { QUERY_TICKETS } from '../../utils/queries'\n\nconst TicketModal = () => {\n\n    // option to add client name in form than material later\n    const [clientName, setText] = useState('');\n    \n    const [addTicket] = useMutation(ADD_TICKET, {\n        update(cache, { data: { addTicket } }) {\n        try {\n          // could potentially not exist yet, so wrap in a try...catch\n          const { tickets } = cache.readQuery({ query: QUERY_TICKETS });\n          cache.writeQuery({\n            query: QUERY_TICKETS,\n            data: { tickets: [addTicket, ...tickets] }\n          });\n        } catch (e) {\n          console.error(e);\n        }        \n      }\n    });\n\n    const handleChange = event => {\n        setText(event.target.value);\n    }\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n    \n        try {\n            // add ticket to database\n            await addTicket ({\n                variables: { clientName }  \n            })\n            console.log('added new ticket')\n        } catch (e) {\n            console.log('errrrg')\n            console.error(e);\n        }\n    }\n\n    return (\n        <div>\n        <h2>New Ticket</h2>\n            <form className=\"flex-row justify-center justify-space-between-md align-stretch\"\n                onSubmit={handleFormSubmit}\n            >\n                <input \n                    placeholder=\"Client Name\" \n                    value={clientName} \n                    className=\"\"\n                    onChange={handleChange}\n                >\n                </input> \n                \n                <button className=\"\" type=\"submit\" >Add Ticket</button>\n            </form> \n        </div> \n    );\n};\n\nexport default TicketModal;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport TicketModal from '../TicketModal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    widht: '75%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst TicketList = ( { tickets, title }) => {\n    // let subtitle;\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    \n    if (!tickets.length) {\n        return <h3> No tickets yet </h3>\n    }\n    console.log(1111, tickets)\n\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n//   function afterOpenModal() {\n//     // references are now sync'd and can be accessed.\n//     subtitle.style.color = '#f00';\n//   }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n    return (\n        <div>\n            <div>\n                {title}\n            </div>\n            <div>\n                <button onClick={openModal}>Add Ticket</button>\n                <Modal\n                    isOpen={modalIsOpen}\n                    // onAfterOpen={afterOpenModal}\n                    onRequestClose={closeModal}\n                    style={customStyles}\n                    contentLabel=\"Example Modal\"\n                >\n                    <div>\n                    <button onClick={closeModal}>close</button>\n\n                    <TicketModal/>\n\n                    </div>\n                </Modal>\n                </div>\n            <div className=\"flex-row justify-center\">\n                {tickets && \n                    tickets.map(ticket => (\n                        <div key={ticket._id} className = \"card mb-3\">\n                            <div  className=\"card-header \">\n                                <div>\n                                    \n                                    <p className=\"pt-2 float-right\">\n                                        {ticket.pickupDate}\n                                    </p>\n                                    {/* <Link to={`/profile/${ticket.clientName}`} style= {{ fontWeight: 700 }} className=\"text-light\"> */}\n                                       <h4> Client: {ticket.clientName}</h4> \n                                    {/* </Link> */}\n                                    \n                                </div>\n\n                                <h6>\n                                    <Link to={`/ticket/${ticket._id}`} style={{ fontWeight: 700 }} className=\"text-light\">\n                                        Ticket Number: {ticket._id}\n                                    </Link>\n                                </h6>\n                            </div>\n                            <div className=\"card-body\">\n                                {  ticket.materials.map(material => (\n                                    \n                                        <div key={material._id} className = \"flex-row justify-space-between card mb-auto pl-2\">\n                                            <p>Metal: {material.materialName}</p>\n                                            <p> {material.quantity} lbs</p>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TicketList;","import React from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_TICKETS } from '../utils/queries';\n\nimport TicketList from '../components/TicketList';\n\nconst Home = () => {\n    // use useQuery hook to make query request\n    const { loading, data } = useQuery(QUERY_TICKETS);\n    const tickets = data?.tickets || [];\n    console.log(tickets);\n\n    return (\n        <main>\n            <div className = 'flex-row justify-space-between'>\n                <div className = 'col-12 mb-3'>\n                    {loading ? (\n                        <div>Loading...</div>\n                    ) : (\n                        <TicketList tickets = {tickets} title = \"Tracker Sheet\" />\n                    )}\n                </div>\n            </div>\n        </main>\n    );\n};\n\nexport default Home;","import React from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport TicketList from '../components/TicketList';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CLIENT } from '../utils/queries';\n\nconst Profile = props => {\n  const { clientName: clientName} = useParams();\n    console.log(clientName)\n  const { loading, data } = useQuery(QUERY_CLIENT, {\n    variables: { clientName: clientName}\n  });\n\n  const client = data?.client || {};\n  console.log('client', client)\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {client.clientName}'s profile.\n        </h2>\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        {/* <div className=\"col-12 mb-3 col-lg-8\">\n          <TicketList thoughts={client.thoughts} title={`${user.clientName}'s thoughts...`} />\n        </div> */}\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, {useState} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_MATERIAL } from '../../utils/mutations';\n\nconst AddMaterialModal = () => {\n\n    // option to add client name in form than material later\n    // const [materialForm, setMaterialName] = useState({materialName: '', quantity: 0});\n    const [materialName, setMaterialName] = useState('')\n    const [quantity, setQuantity] = useState(0)\n    const { id: ticketId } = useParams();\n    console.log(ticketId)\n    const [addMaterial] = useMutation(ADD_MATERIAL);\n\n    const handleMaterialName = event => {\n        setMaterialName(event.target.value)\n    }\n    const handleQuantity = event => {\n        setQuantity(event.target.value)\n    }\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log('form submit', ticketId, materialName, quantity )\n        try {\n            // add ticket to database\n            await addMaterial ({\n                variables: { ticketId, materialName, quantity}  \n            })\n            console.log(ticketId, materialName, quantity)\n        } catch (e) {\n            console.log('ergg')\n            console.error(e);\n        }\n    }\n\n    return (\n        <div>\n        <h2>add material</h2>\n            <form className=\"flex-row justify-center justify-space-between-md align-stretch\"\n                onSubmit={handleFormSubmit}\n            >\n                <input \n                    placeholder=\"Material\" \n                    name='materialName'\n                    type='materialName'\n                    id='materialName'\n                    value={materialName} \n                    className=\"\"\n                    onChange={handleMaterialName}\n                >\n                </input> \n                <input \n                    placeholder=\"Quantity\" \n                    name='quantity'\n                    type='quantity'\n                    id='quantity'\n                    value={quantity} \n                    className=\"\"\n                    onChange={handleQuantity}\n                >\n                </input> \n                \n                <button className=\"\" type=\"submit\">Add Ticket</button>\n            </form> \n        </div> \n    );\n};\n\nexport default AddMaterialModal ;\n\n","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Modal from 'react-modal';\nimport EditMaterialModal from '../components/EditMaterialModal';\nimport AddMaterialModal from '../components/AddMaterialModal'\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_TICKET , QUERY_TICKETS} from '../utils/queries';\nimport { DELETE_MATERIAL, DELETE_TICKET } from '../utils/mutations';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    widht: '75%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst SingleTicket = props => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const [materialId, setMaterialId] = useState(0);\n  \n  const { id: ticketId } = useParams();\n  const { loading, data } = useQuery(QUERY_TICKET, {\n    variables: { id: ticketId }\n  });\n\n\n  const [deleteTicket] = useMutation(DELETE_TICKET, {\n    variables: {ticketId}\n  })\n  \n  const [deleteMaterial] = useMutation(DELETE_MATERIAL);\n  const ticket = data?.ticket || {};\n  // const materialId = ticket.materials[0]._id || {};\n  console.log('materialId', materialId)\n  console.log('ticketId', ticketId)\n  console.log(222, ticket)\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  \n\n  // const handleChange = async event => {\n  //   setMaterialId(event.target.value);\n  //   console.log('new material id', materialId)\n  // }\n\n  const handleDeleteMaterial = async event => {\n    event.preventDefault();\n    setMaterialId(event.target.value)\n    console.log(111, materialId)\n    try {\n      await deleteMaterial({\n          variables: {ticketId, materialId}\n      })\n      console.log(555, materialId)\n      console.log('delete ticket from client side')\n    } catch (e) {\n      console.log('errr')\n      console.error(e)\n    }\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return (\n    <div>\n      <div className=\"card mb-3\">\n        <div className=\" flex-row justify-space-between card-header\">\n          <span style={{ fontWeight: 700 }} className=\"text-light\">\n            <h3> {ticket.clientName} </h3>\n              <button onClick={deleteTicket}> Delete Ticket </button>\n            \n            <div>\n              <button onClick={openModal}> Add Material </button>\n              <Modal\n                    isOpen={modalIsOpen}\n                    // onAfterOpen={afterOpenModal}\n                    onRequestClose={closeModal}\n                    style={customStyles}\n                    contentLabel=\"Example Modal\"\n                >\n                    <div>\n                    <button onClick={closeModal}>close</button>\n\n                    <AddMaterialModal/>\n\n                    </div>\n                </Modal>\n            </div>\n          </span>{' '}\n\n        </div>\n        <div className=\"card-body\">\n          {ticket.materials.map(material => (\n            <div key={material._id} className=\"card mb-0\">\n              <p>{material._id}</p>\n              <p>{material.materialName}</p>\n              <p>{material.quantity}</p>\n              <div className=\"flex-row\">\n                <div>\n                  {/* <button onClick={openModal}>Edit</button> */}\n                  {/* <Modal\n                    isOpen={modalIsOpen}\n                    // onAfterOpen={afterOpenModal}\n                    onRequestClose={closeModal}\n                    style={customStyles}\n                    contentLabel=\"Example Modal\"\n                  >\n                    <div>\n                      <button onClick={closeModal}>close</button>\n\n                      <EditMaterialModal />\n\n                    </div>\n                  </Modal> */}\n                </div>\n                <div className=\"pl-3\">\n                  <button value={material._id} onClick={handleDeleteMaterial} >Delete Material (double click)</button>\n                </div>\n              </div>\n            </div>\n          ))\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleTicket;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Oops, we couldn't find that page.\n    </div>\n  );\n};\n\nexport default NoMatch;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport SingleTicket from './pages/SingleTicket';\nimport NoMatch from './pages/NoMatch';\n\n\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// establish connect to back-end servers /graphql endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className='flex-column justify-flex-start min-100-vh'>\n          <Header/>\n          <div className='container'>\n            <Switch> \n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login}/>\n              <Route exact path=\"/signup\" component={Signup}/>\n              <Route exact path=\"/profile/:clientName?\" component={Profile} />\n              <Route exact path=\"/ticket/:id\" component={SingleTicket} />\n\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n          <Footer/>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}